---
layout: post
title:  "weather app [doc]"
date:   2017-07-27
categories: javascript, fcc
---

The following is just me documenting as I went through building the weather app. I would work and post script progress as I went. User stories are from [FCC](https://freecodecamp.org).

- - - 

  user stories:
  * i can see weather in my current location
  * i can see a different icon or background image depending on the weather
  * i can push a button to toggle between fahrenheit and celsius

[MDN docs - Geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation)
[MDN docs - Navigator Geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/geolocation)
[MDN docs - Using Geolocation](developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation)

```
  <script>
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        $(".location").html("Latitude: " + position.coords.latitude + ", Longitude: " + position.coords.longitude);  
      });
    } // this finds lat/ long position
  </script>

```
example from docs^ asks permission to access location and returns longitude/latitude

- - - 

[Weather API](https://darksky.net/dev/docs)
[jQuery docs - AJAX](https://api.jquery.com/jQuery.ajax/)
[jQuery docs - JSON](https://api.jquery.com/jQuery.getJSON/)


atm:
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]

  $(document).ready(function() {
    //function getWeather() {
      $.ajax({
        url:"https://api.darksky.net/forecast/",
        dataType:"json", 
        data: {
          key: ENV['dark_sky_api_key'],
          latitude: "latitude",
          longitude: "longitude",
          timezone: "timezone"
        },
        success: function(data) {
          console.log(data);
        }
      }); // end of AJAX
    //} // end of function
    //getWeather(); // calls function, but getting 403 atm

    function findMe() {
      function success(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        $(".location").html("Latitude: " + latitude + ", Longitude: " + longitude);  
      };
      navigator.geolocation.getCurrentPosition(success);
    } // this finds lat/ long position, findMe()

    $("#location-button").on("click", function() {
      findMe(); // this gives me coordinates
    }); // click/ button
   
  }); // end of $(document).ready()
</script>
```
- - -
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]

  $(document).ready(function() {
  
    function getWeather() {
      navigator.geolocation.getCurrentPosition(function(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        // $(".location").html(latitude + ", " + longitude); 
        
        $.ajax({
          url:"https://api.darksky.net/forecast/52bf5389527a13967622319ea895b0a9/" + latitude + "," + longitude,
          dataType:"json", 
          success: function(data) {
            console.log(data);
          }
        }); // end of AJAX
      });// this finds lat/ long position
    } // end of function
    getWeather(); // calls function, but getting 404 atm
 

    $("#location-button").on("click", function() {
    //  $(".location").html("button works");
      getWeather();
    }); // click/ button
   
  }); // end of $(document).ready()
</script>
```
getting an error

`SyntaxError: JSON.parse: unexpected end of data at line 1 column 1 of the JSON data`

- - - 
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]

  $(document).ready(function() {
    
    function getWeather() {
      navigator.geolocation.getCurrentPosition(function(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;  
        
        $.ajax({
          url:"https://api.darksky.net/forecast/52bf5389527a13967622319ea895b0a9/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts,flags]",
          dataType:"jsonp", 
          success: function(data) {
            // console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelLike = data.currently.apparentTemperature;
            var tempIcon = data.currently.icon;
            var tempSummary = data.currently.summary;

            var dailyIcon = data.daily.icon;
            var dailySummary = data.daily.summary;

            $(".location").html(temp + "<br />" + summary); 
          }
        }); // end of AJAX
      });// this finds lat/ long position
    } // end of function
    getWeather(); // calls function
 
    // $("#location-button").on("click", function() {
    // //  $(".location").html("button works");
    //   getWeather();
    // }); // click/ button
   
  }); // end of $(document).ready()
</script>
```

changed `dataType` to `jsonp`

things are now showing up on console as well as browser depending on what information ive isolated

have decided to use exclude so as not to request additional info, unneccessary

TO DO:
what I still want to do is have a way where the key will not be public
  i've looked at figaro as Ive used it for keeping gmail email/pw private
  unsure of how to incorporate as I tried earlier and was unsuccessful

also, I'd like use to convert position to show city (another API to do that)

I went ahead and added figaro gem to use ENV vars, but they come out empty, missing something
the only time Ive used it was for mailer purposes

Looking into proxy server to make API call behind the scenes, I dont want the secret api key public `>_<`

- - - 
Made use of ENV variable, but I'd still like to look into proxy server to call API-- I've come across the topic regarding Node

Presently-- using [FIGARO GEM](https://github.com/laserlemon/figaro) 
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]

  $(document).ready(function() {
    function getWeather() {
      navigator.geolocation.getCurrentPosition(function(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        $.ajax({
          url:"https://api.darksky.net/forecast/<%=ENV['DARK_SKY']%>" + "/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts,flags]",
          dataType:"jsonp", 
          success: function(data) {
            // console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelsLike = data.currently.apparentTemperature;
            var tempIcon = data.currently.icon;
            var tempSummary = data.currently.summary;

            var dailyIcon = data.daily.icon;
            var dailySummary = data.daily.summary;

            $(".location").html("Current Temperature: " + currentTemp + "<br />" + "Feels Like: " + feelsLike + "<br />" + tempIcon); 
          }
        }); // end of AJAX
      });// this finds lat/ long position
    } // end of function
    getWeather(); // calls function
 

    // $("#location-button").on("click", function() {
    // //  $(".location").html("button works");
    //   getWeather();
    // }); // click/ button
   
  }); // end of $(document).ready()
</script>
```
- - - 

I'd like to add location based off of lat/long collected-- up next!
Google  MAps API -- have a key, stored in console

want to break up the geolocation into a function I could call for both APIs
instead of writing it twice

get lat/lon to get city**

geocode was driving me nuts, I could see the info on the network but could not console log any of the info for shit for some reason -- I'd like to figure out why

- - - 
this was my attempt at messing the geocode api: 
```
<script>
function getCity() {
      navigator.geolocation.getCurrentPosition(function(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"jsonp",
          success: function(data) {
             for(var i = 0; i < data.results.length; i++) {
              console.log(data.results[i]);
              
             }
              

          }
        }); // end of AJAX
      });// this finds lat/ long position
    } // end of function
    getCity(); // calls function
</script>
````
finally got it to work-- dataType was to be changed to json
although I had changed it at some point, nothing was still showing up
until I used JSON.stringify to see the info in browser
```
<script>
function getCity() {
      navigator.geolocation.getCurrentPosition(function(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"json",
          success: function(data) {
             // $(".location").html(JSON.stringify(data.results); 
              var location;

              for(i=0; i < data.results.length; i++) {
                 location = data.results[1].formatted_address;   
              }
              // console.log(location); //city, state, zip, country
              $(".location").html(location);

          }
        }); // end of AJAX
      });// this finds lat/ long position
    } // end of function
    getCity(); // calls function
</script>
```
at this point, i have both functions working seperately
however, calling location twice is daf so next up is to refactor
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]
  $(document).ready(function() {
    
    navigator.geolocation.getCurrentPosition(function(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;

      function getCity() { 
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"json",
          success: function(data) {
            // $(".location").html(JSON.stringify(data.results); 
              
            var location = data.results[1].formatted_address; //city, state, zip, country
            location = location.split(' ').slice(0,2).join(' ');
            //console.log(location); //city, state
                 
            $(".location").html(location);

          }
        }); // end of AJAX   
      } // end of function
      getCity(); // calls function
    
      function getWeather() {    
        $.ajax({
          url:"https://api.darksky.net/forecast/<%=ENV['DARK_SKY']%>" + "/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts,flags]",
          dataType:"jsonp", 
          success: function(data) {
            //console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelsLike = data.currently.apparentTemperature;  
            var tempIcon = data.currently.icon;

            var dailyIcon = data.daily.icon;
            var dailySummary = data.daily.summary;


            $(".weather").html(tempIcon + "<br />" + "Current Temperature: " +  currentTemp + "<br />" + "Feels Like: " + feelsLike + "<br />" + dailySummary); 

            function celsiusConvert() {
              var currentTemp2 = Math.round(currentTemp - 32);
              var feelsLike2 = Math.round(feelsLike - 32);
            
              $(".weather").html(tempIcon + "<br />" + "Current Temperature: " +  currentTemp2 + "°C" + "<br />" + "Feels Like: " + feelsLike2 + "°C" + "<br />" + dailySummary);   
            }

            $("#temp-button").on("click", function() {
              celsiusConvert();
            })
             
          } // end of success
        }); // end of AJAX
      } // end of function
      getWeather();
    });// this finds lat/ long position
  }); // end of $(document).ready()
</script>
```
rearranged code to call for lat/lon once
giving me city/ location

to do:
  - can convert from F to C, but not the other way around yet
  - looking to be able to also convert F in summary for week
 
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]
  $(document).ready(function() {
    
    navigator.geolocation.getCurrentPosition(function(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;

      function getCity() { 
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"json",
          success: function(data) {
            // $(".location").html(JSON.stringify(data.results); 
              
            var location = data.results[1].formatted_address; //city, state, zip, country
            location = location.split(' ').slice(0,2).join(' ');
            //console.log(location); //city, state
                 
            $(".location").html(location);

          }
        }); // end of AJAX   
      } // end of function
      getCity(); // calls function
    
      function getWeather() {    
        $.ajax({
          url:"https://api.darksky.net/forecast/<%=ENV['DARK_SKY']%>" + "/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts]",
          dataType:"jsonp", 
          success: function(data) {
            //console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelsLike = data.currently.apparentTemperature;  
            var tempIcon = data.currently.icon;

            var dailyIcon = data.daily.icon;
            var dailySummary = data.daily.summary;

            // var tempUnit = data.flags.units; // "us" or "si"
            
            // $(".weather").html(tempIcon + "<br />" + "Current Temperature: " +  currentTemp + "<br />" + "Feels Like: " + feelsLike + "<br />"); 

            function celsiusConvert() {
              // C = (F - 32) / 1.8
              var cTemp = (currentTemp - 32) / 1.8;
              var cfeelsLike = (feelsLike - 32) / 1.8;
              
              cTemp = cTemp.toFixed(1);
              cfeelsLike = cfeelsLike.toFixed(1);
            
              return tempIcon + "<br />" + "Current Temperature: " +  cTemp + "°C" + "<br />" + "Feels Like: " + cfeelsLike + "°C";   
            }

            function fahrenheitConvert() {
              // F = (C x 1.8) + 32
              var fTemp = currentTemp.toFixed(1);
              var ffeelsLike = feelsLike.toFixed(1);
              return tempIcon + "<br />" + "Current Temperature: " +  fTemp + "°F" + "<br />" + "Feels Like: " + ffeelsLike + "°F";  
            }

            $("#f").html(fahrenheitConvert);
            $("#c").html(celsiusConvert);

          } // end of success
        }); // end of AJAX
      } // end of function
      getWeather();
    });// this finds lat/ long position
    
    $("#temp-button").on("click", function() {
      $(".weather").toggle();
    }); 

  }); // end of $(document).ready()
</script>
```

```
<!--h1>testing...</h1-->
<br />
<div class="location">

</div>
<br />
<div class="weather" id="f" style="display:block"></div>
<div class="weather" id="c" style="display:none"></div>
<br />
<button id="temp-button">°F / °C</button>
```
able to toggle btwn fahrenheit/celsius by using id in html and jquery selectors

- - - 

to do:
 - looking to be able to also convert F in summary for week
 - also use unit to change type of temp (f/c) instead of hardcode
 + icon according to weather and/or
 - background changing depending on weather

```
 <script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]
  $(document).ready(function() {
    
    navigator.geolocation.getCurrentPosition(function(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;

      function getCity() { 
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"json",
          success: function(data) {
            // $(".location").html(JSON.stringify(data.results); 
              
            var location = data.results[1].formatted_address; //city, state, zip, country
            location = location.split(' ').slice(0,2).join(' ');
            //console.log(location); //city, state
                 
            $(".location").html(location);

          }
        }); // end of AJAX   
      } // end of function
      getCity(); // calls function
    
      function getWeather() {   
        $.ajax({
          url:"https://api.darksky.net/forecast/<%=ENV['DARK_SKY']%>" + "/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts]",
          dataType:"jsonp", 
          success: function(data) {
            // console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelsLike = data.currently.apparentTemperature;  
            var tempIcon = data.currently.icon;

            // var dailySummary = data.daily.summary;

            // var tempUnit = data.flags.units; // "us" or "si"
            
            // $(".weather").html(tempIcon + "<br />" + "Current Temperature: " +  currentTemp + "<br />" + "Feels Like: " + feelsLike + "<br />"); 

            function celsiusConvert() {
              // C = (F - 32) / 1.8
              var cTemp = (currentTemp - 32) / 1.8;
              var cfeelsLike = (feelsLike - 32) / 1.8;
              
              cTemp = cTemp.toFixed(1);
              cfeelsLike = cfeelsLike.toFixed(1);
            
              return tempIcon + "<br />" + "Current Temperature: " +  cTemp + "°C" + "<br />" + "Feels Like: " + cfeelsLike + "°C";   
            }

            function fahrenheitConvert() {
              // F = (C x 1.8) + 32
              var fTemp = currentTemp.toFixed(1);
              var ffeelsLike = feelsLike.toFixed(1);
              return tempIcon + "<br />" + "Current Temperature: " +  fTemp + "°F" + "<br />" + "Feels Like: " + ffeelsLike + "°F";  
            }

            // FOR TOGGLE
            $("#f").html(fahrenheitConvert);
            $("#c").html(celsiusConvert);
            
            // SKYCONS
            var skycons = new Skycons({"color":"orange"});
            var list = ["clear-day", "clear-night", "partly-cloudy_day", "partly-cloudy-night", "cloudy", "rain", "sleet", "snow", "wind", "fog"];
            console.log(list);
            for(var i = 0; i < list.length; i++) {
              if(tempIcon == list[i]) {
                skycons.set("weather-icon", list[i]);
              }
            }
            skycons.play();

          } // end of success
        }); // end of AJAX
      } // end of function
      getWeather();
    });// this finds lat/ long position
   
   // toggle button
    $("#temp-button").on("click", function() {
      $(".weather").toggle();
    }); 

  }); // end of $(document).ready()
</script>
```

```
<!--h1>testing...</h1-->

<br />
<div class="location">

</div>
<br />
<div class="skycon">
  <canvas id="weather-icon" width="64" height="64"></canvas>
</div>
<br />
<div class="weather" id="f" style="display:block"></div>
<div class="weather" id="c" style="display:none"></div>
<br />
<button id="temp-button">°F / °C</button>
```

w/ `<script src="https://gitcdn.link/cdn/darkskyapp/skycons/master/skycons.js"></script>` in the head section

at first icons were not showing up, changing up things until finally it worked, unsure of what was actually causing the fail in regards to code-- i had tried same code and it had failed-- oh the mysteriess `>_<`

- - - 

CSS GRID for the first time w00t 

html/ css status 
```
<!--html-->
<div class="container">
  <div class="header">
    <!--h1>testing...</h1-->
  </div>
  <br />
  <div class="location-box">
    <!-- location -->
    <div class="location"></div>
    <div class="skycon">
      <canvas id="weather-icon" width="64" height="64"></canvas>
    </div>
  </div>
  <br />
  <!-- weather -->
  <div class="weather-box">
    <div class="weather" id="f" style="display:block"></div>
    <div class="weather" id="c" style="display:none"></div>
    <button id="temp-button">°F / °C</button>
  </div>
  <!-- footer -->
  <div class="footer">
    <p><a href="https://darksky.net/poweredby/"> Powered by Dark Sky </a></p>
  </div>
</div>
<!--/html-->
```

```
<!--css-->
.container {
  display:grid;
  grid-template-columns: 2fr 4fr 2fr;
  grid-template-rows: 2fr 15fr 10fr 2fr;
  grid-row-gap: 1em;
}

.header {
  grid-area: 1 / 1 / 1 / 4;
}

.footer {
  grid-area: 4 / 1 / 4 / 4;
  justify-self: center;
}

.location-box {
  display: grid;
  grid-area: 2 / 2 / 3 / 3;
  justify-self: center;
}

.weather-box {
  display: grid;
  grid-area: 3 / 2 / 4 / 3;
  justify-self: center;
}

.weather {
  justify-self: center;
}

#temp-button {
  height: 32px;
  width: 128px;
  justify-self: center;
}

.footer a {
  text-decoration: none;
}
<!--/css-->
```
- - - 

<!--
 + font
 + color/bg/text/w.e
 - button, maybe turn it into a slider
 - better wording
 + the icon descriptio w/o dashes
 + added daily summary instead of for the week

 added google fonts
 added some basic color for bg and weather icon
 changed some placement/ display of text

 - thinking of adding a bg image that changes behing data but still letting blue bg peek from behind
 + a hover on the button
 -->
```
<script>
// https://api.darksky.net/forecast/[key]/[latitude],[longitude]
  $(document).ready(function() {
    
    navigator.geolocation.getCurrentPosition(function(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;

      function getCity() { 
        $.ajax({
          url: "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=<%=ENV['GEO_KEY']%>", 
          dataType:"json",
          success: function(data) {
            // $(".location").html(JSON.stringify(data.results); 
              
            var location = data.results[1].formatted_address; //city, state, zip, country
            location = location.split(' ').slice(0,2).join(' ');
            //console.log(location); //city, state
                 
            $(".location").html(location);

          }
        }); // end of AJAX   
      } // end of function
      getCity(); // calls function
    
      function getWeather() {   
        $.ajax({
          url:"https://api.darksky.net/forecast/<%=ENV['DARK_SKY']%>" + "/" + latitude + "," + longitude + "?exclude=[minutely,hourly,alerts]",
          dataType:"jsonp", 
          success: function(data) {
            // console.log(data);
            // console.log(data.currently.icon); // gives summary as well
            // console.log(data.currently.summary);
            // console.log(data.daily.icon);
            // console.log(data.daily.summary);

            var currentTemp = data.currently.temperature;
            var feelsLike = data.currently.apparentTemperature;  
            var tempIcon = data.currently.icon;

            
            var tempIconEdit = tempIcon.replace(/-/g, ' '); // this takes out dashes for descriptive output under skycon
            // console.log(tempIconEdit);

            var dailySummary = data.daily.data[0].summary;
            // console.log(dailySummary);

            // var tempUnit = data.flags.units; // "us" or "si"
            // console.log(tempUnit);

            function celsiusConvert() {
              // C = (F - 32) / 1.8
              var cTemp = (currentTemp - 32) / 1.8;
              var cfeelsLike = (feelsLike - 32) / 1.8;
              
              cTemp = cTemp.toFixed(1);
              cfeelsLike = cfeelsLike.toFixed(1);
            
              return "<div class='tempIconDes'>" + tempIconEdit + "</div>" + "<br />" + dailySummary + "<br />" + "<br />" + "<hr />" + "<br />" + "<br />" + "<div class='actualTemp'>" + cTemp + "°C" + "</div>" + "<br />" + "Feels Like: " + cfeelsLike + "°C";   
            }

            function fahrenheitConvert() {
              // F = (C x 1.8) + 32
              var fTemp = currentTemp.toFixed(1);
              var ffeelsLike = feelsLike.toFixed(1);
              return "<div class='tempIconDes'>" + tempIconEdit + "</div>" + "<br />" + dailySummary + "<br />" + "<br />" + "<hr />" +  "<br />" + "<br />" + "<div class='actualTemp'>" + fTemp + "°F" + "</div>" + "<br />" + "Feels Like: " + ffeelsLike + "°F";  
            }

            // FOR TOGGLE
            $("#f").html(fahrenheitConvert);
            $("#c").html(celsiusConvert);
            
            // SKYCONS
            var skycons = new Skycons({"color":"yellow"});
            var list = ["clear-day", "clear-night", "partly-cloudy_day", "partly-cloudy-night", "cloudy", "rain", "sleet", "snow", "wind", "fog"];
            // console.log(list);
            for(var i = 0; i < list.length; i++) {
              if(tempIcon == list[i]) {
                skycons.set("weather-icon", list[i]);
              }
            }
            skycons.play();

          } // end of success
        }); // end of AJAX
      } // end of function
      getWeather();
    });// this finds lat/ long position
   
   // toggle button
    $("#temp-button").on("click", function() {
      $(".weather").toggle();
    }); 

  }); // end of $(document).ready()
</script>
```

```
<!--html-->
<div class="container">
  <div class="header">
    <!--h1>testing...</h1-->
  </div>
  <br />
  <div class="location-box">
    <!-- location -->
    <div class="location"></div>
    <div class="skycon">
      <canvas id="weather-icon" width="64" height="64"></canvas>
    </div>
  </div>
  <!-- weather -->
  <div class="weather-box">
    <div class="weather" id="f" style="display:block"></div>
    <div class="weather" id="c" style="display:none"></div>
    <button id="temp-button">°F / °C</button>
  </div>
  <!-- footer -->
  <div class="footer">
    <p><a href="https://darksky.net/poweredby/"> Powered by Dark Sky </a></p>
  </div>
</div>
<!--/html-->
```

```
<!--css-->
.container {
  display:grid;
  grid-template-columns: 2fr 4fr 2fr;
  grid-template-rows: 2fr 3fr 8fr 1fr;
  grid-row-gap: 1em;
}

.header {
  grid-area: 1 / 1 / 1 / 4;
}

.footer {
  grid-area: 4 / 1 / 4 / 4;
  justify-self: start;
}

.location-box {
  display: grid;
  grid-area: 2 / 2 / 3 / 3;
  justify-self: center;
}

.weather-box {
  display: grid;
  grid-area: 3 / 2 / 4 / 3;
  justify-self: center;
}

.weather {
  justify-self: center;
  font-family: 'Muli', sans-serif;
  text-align: center;
}

#temp-button {
  height: 32px;
  width: 128px;
  justify-self: center;
  border: 1px solid black;
  background-color: #f8f8ff;
}

#temp-button:hover {
  height: 34px;
  width: 130px;
  border: 1px solid yellow;
}

.footer a {
  text-decoration: none;
  font-family: 'Muli', sans-serif;
}

body {
  background: url('darkness.png');
  color: white;
}

.location {
  font-family: 'Work Sans', sans-serif;
  font-size: 32px;
}

.skycon {
  justify-self: center;
}

.actualTemp {
  font-size: 50px;
}
<!--/css-->
```
- - - 

setup for heroku
adding `12railsfactor gem`, and edit `prod.rb` to fallback on assets pipeline if precompile assets missed
created heroku app then...
`figaro heroku:set -e production` so env vars could be used in prod

issue: skycon missing now
and now so is all of weather info `-_-`
but only on dev comp/ phone, but not on MB Air 
  theory: it happened after i put figaro for prod and set up heroku

also the button after press has blue outline... i hate it `-_-`
   solution: `#temp-button:focus {outline: 0;}`


looks like the issue is only with firefox**

still no solution to why ajax call is missin in firefox and safari--
only works on chrome `-_-` and on web only as well
before it was working on my phone and now it doesnt

SOLVED:
somehow-- it started working on the air
and then on my dev machine-- it was privacy badger that somehow started blocking darksky api
mobile-- just needed location on and it worked

however-- 
alignment of skycon and button end up on the left when viewed on safari (revisit)


