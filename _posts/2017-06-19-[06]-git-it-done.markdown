---
layout: post
title:  "Git It Done"
date:   2017-06-19
categories: git
---  

The amount of times I look these up...  
I have screenshots saved, I have notes...  
Yea, I'll be adding to this list. Until then...


# Switching Branches

`$ git checkout -b branch-name-here`  
 _switches to new branch 'branch-name-here'_

Shortcut for:

`$ git branch branch-name-here`  
`$ git checkout branch-name-here`  

# Using Rebase to Update Branch

```
$ git checkout master
$ git pull
$ git checkout other-branch
$ git rebase master
$ git push origin other-branch -f
```

# When you need to delete a branch

`$ git branch -d the-local-branch` 

# When you want to delete untracked files from working branch  

This one I actually only used once and I'm not exactly sure what was the situation, but I jotted it down nonetheless because, well, you never know. There are two posts I saved regarding this topic-- perhaps, I'll look them over and summarize them here or on a seperate post.  

`$ git clean -n` (will show files that would be deleted)  

`$ git clean -f` (will delete files) 

# When you screw up a git merge 

`$ git reset --hard master@{"300 minutes ago"}` to revert back to a certain period of time... before you screwed up :D

That^ little nugget of wisdom came from [@data_stephanie](https://twitter.com/data_stephanie/status/968226587547258886) on Twitter. *I love Twitter*

# Undo local commit

`$ git reset --hard HEAD^` undo without keeping changes made

`$ git reset --soft HEAD^` undo keeps changes BEFORE commit




